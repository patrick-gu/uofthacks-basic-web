(()=>{"use strict";function e(e,r){for(;r.ip<e.statements.length;){const n=e.statements[r.ip];let u=r.ip+1;switch(n.type){case"assign":t(r,n.lvalue)(o(a(r,n.rvalue)));break;case"attribute":{const e=r.currentTag;if("root"===e.type)throw new Error("Can only add attributes when inside a tag.");e.attributes.set(n.key,a(r,n.value));break}case"open":{const e={type:"tag",tag:n.tag,parent:r.currentTag,attributes:new Map,bindings:new Map,content:[]};r.currentTag.content.push(e),r.currentTag=e;break}case"close":if("root"===r.currentTag.type)throw new Error("No tag to close.");r.currentTag=r.currentTag.parent;break;case"end":i(e,r,r.root);case"clear":r.root={type:"root",content:[]},r.currentTag=r.root;break;case"goto":u=n.statement;break;case"print":{const e=l(a(r,n.value));r.currentTag.content.push({type:"text",value:e});break}case"gotoIf":{const e=a(r,n.cond);if("boolean"!==e.type)throw new Error(`Cannot write condition of type ${n.type}.`);e.value&&(u=n.statement);break}case"dim":{const e=t(r,n.lvalue),l=a(r,n.length);if("number"!==l.type)throw new Error("Array length must be a number.");e({type:"array",data:Array(l.value).map((()=>({type:"number",value:0})))});break}case"bind":{const e=t(r,n.lvalue),a=r.currentTag;if("root"===a.type)throw new Error("Can only add bindings when inside a tag.");a.bindings.set(n.key,e);break}}r.ip=u}}function t(e,t){if("variable"===t.type)return a=>{e.variables.set(t.variable,a)};if("arrayAccess"===t.type){const[a,n]=r(e,t.array,t.index);return e=>{a[n]=e}}throw new Error("Cannot assign to expression.")}function a(e,t){switch(t.type){case"add":{const r=a(e,t.left),n=a(e,t.right);if("number"===r.type&&"number"===n.type)return{type:"number",value:r.value+n.value};throw new Error(`Cannot add variables of type ${r.type} and ${n.type}`)}case"callback":return{type:"callback",line:t.line};case"greater":{const r=a(e,t.left),n=a(e,t.right);if("number"!==r.type||"number"!==n.type)throw new Error(`Can only compare numbers. Found ${r.type} > ${n.type}.`);return{type:"boolean",value:r.value>n.value}}case"equals":return{type:"boolean",value:n(a(e,t.left),a(e,t.right))};case"literalBoolean":return{type:"boolean",value:t.value};case"literalInteger":return{type:"number",value:t.value};case"literalString":return{type:"string",value:t.value};case"variable":{const a=e.variables.get(t.variable);if(void 0===a)throw new Error(`Undefined variable ${t.variable}`);return a}case"modulo":{const r=a(e,t.left),n=a(e,t.right);if("number"===r.type&&"number"===n.type){if(0===n.value)throw new Error("Modulo by zero");return{type:"number",value:r.value%n.value}}throw new Error(`Cannot modulo variables of type ${r.type} and ${n.type}`)}case"arrayAccess":{const[a,n]=r(e,t.array,t.index);return a[n]}}}function r(e,t,r){const n=a(e,t),l=a(e,r);if("array"!==n.type)throw new Error(`Cannot index non-array of type ${n.type}.`);if("number"!==l.type)throw new Error(`Cannot index array with non-number type ${l.type}`);if(!(Number.isInteger(l.value)&&0<=l.value&&l.value<n.data.length))throw new Error(`Index out of bounds: ${l.value}`);return[n.data,l.value]}function n(e,t){if(e.type!==t.type)return!1;switch(e.type){case"boolean":case"string":case"number":return e.value===t.value;case"callback":return e.line===t.line;case"array":{const a=e.data,r=t.data;if(a.length!==r.length)return!1;for(let e=0;e<a.length;e++)if(!n(a[e],r[e]))return!1;return!0}}}function l(e){switch(e.type){case"callback":return"GOTO"+e.line;case"number":return e.value.toString();case"string":return e.value;case"boolean":return e.value?"TRUE":"FALSE";case"array":return"("+e.data.map(l).join(",")+")"}}function o(e){switch(e.type){case"boolean":case"number":case"string":case"callback":return e;case"array":return{type:"array",data:e.data.map(o)}}}function i(e,t,a){document.getElementsByTagName("body")[0].replaceChildren(...a.content.map((a=>u(e,t,a))))}function u(t,a,r){if("tag"===r.type){const n=document.createElement(r.tag);for(const[l,o]of r.attributes.entries())switch(o.type){case"string":n.setAttribute(l,o.value);break;case"number":case"boolean":n.setAttribute(l,o.value.toString());break;case"callback":n[l]=()=>{a.ip=o.line,e(t,a)}}return n.onchange=e=>{for(const[t,a]of r.bindings.entries())a({type:"string",value:e.target[t]})},n.replaceChildren(...r.content.map((e=>u(t,a,e)))),n}return r.value}const s={statements:[{type:"assign",lvalue:{type:"variable",variable:"left"},rvalue:{type:"literalInteger",value:0}},{type:"assign",lvalue:{type:"variable",variable:"right"},rvalue:{type:"literalInteger",value:0}},{type:"goto",statement:6},{type:"assign",lvalue:{type:"variable",variable:"left"},rvalue:{type:"add",left:{type:"variable",variable:"left"},right:{type:"literalInteger",value:1}}},{type:"goto",statement:6},{type:"assign",lvalue:{type:"variable",variable:"right"},rvalue:{type:"add",left:{type:"variable",variable:"right"},right:{type:"literalInteger",value:1}}},{type:"open",tag:"p"},{type:"print",value:{type:"variable",variable:"left"}},{type:"open",tag:"button"},{type:"attribute",key:"onclick",value:{type:"callback",line:3}},{type:"print",value:{type:"literalString",value:"Vote left"}},{type:"close"},{type:"open",tag:"button"},{type:"attribute",key:"onclick",value:{type:"callback",line:5}},{type:"print",value:{type:"literalString",value:"Vote right"}},{type:"close"},{type:"print",value:{type:"variable",variable:"right"}},{type:"close"},{type:"open",tag:"p"},{type:"print",value:{type:"literalString",value:"Winner: "}},{type:"print",value:{type:"literalString",value:"tie"}},{type:"close"},{type:"end"}]};!function(){const t={type:"root",content:[]},a={variables:new Map,ip:0,root:t,currentTag:t};e(s,a)}()})();